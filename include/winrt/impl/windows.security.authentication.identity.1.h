// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.3.4.5

#pragma once
#ifndef WINRT_Windows_Security_Authentication_Identity_1_H
#define WINRT_Windows_Security_Authentication_Identity_1_H
#include "winrt/impl/windows.security.authentication.identity.0.h"
WINRT_EXPORT namespace winrt::Windows::Security::Authentication::Identity
{
    struct WINRT_IMPL_EMPTY_BASES IEnterpriseKeyCredentialRegistrationInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEnterpriseKeyCredentialRegistrationInfo>
    {
        IEnterpriseKeyCredentialRegistrationInfo(std::nullptr_t = nullptr) noexcept {}
        IEnterpriseKeyCredentialRegistrationInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IEnterpriseKeyCredentialRegistrationManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEnterpriseKeyCredentialRegistrationManager>
    {
        IEnterpriseKeyCredentialRegistrationManager(std::nullptr_t = nullptr) noexcept {}
        IEnterpriseKeyCredentialRegistrationManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IEnterpriseKeyCredentialRegistrationManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEnterpriseKeyCredentialRegistrationManagerStatics>
    {
        IEnterpriseKeyCredentialRegistrationManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IEnterpriseKeyCredentialRegistrationManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
