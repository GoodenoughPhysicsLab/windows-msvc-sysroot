// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.240405.15

#pragma once
#ifndef WINRT_Authenticator_1_H
#define WINRT_Authenticator_1_H
#include "winrt/impl/authenticator.0.h"
WINRT_EXPORT namespace winrt::Authenticator
{
    struct WINRT_IMPL_EMPTY_BASES IDetail :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDetail>
    {
        IDetail(std::nullptr_t = nullptr) noexcept {}
        IDetail(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISettings>
    {
        ISettings(std::nullptr_t = nullptr) noexcept {}
        ISettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IWindow :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWindow>
    {
        IWindow(std::nullptr_t = nullptr) noexcept {}
        IWindow(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
